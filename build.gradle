plugins {
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'club.tennis'
version = '0.0.1'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
//    Spring Boot dependencies
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

//    springDoc
    implementation 'org.springdoc:springdoc-openapi-ui:1.5.10'

//    Database
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:2.7.3'

//    Lombok
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

//    MapStruct
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    compileOnly 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'

//    querydsl dependencies
    implementation 'com.querydsl:querydsl-jpa:5.0.0'
    implementation 'com.querydsl:querydsl-apt:5.0.0'
    implementation 'com.querydsl:querydsl-core:5.0.0'
//    annotationProcessor 'com.querydsl:querydsl-jpa:5.0.0'
//    annotationProcessor 'com.querydsl:querydsl-core:5.0.0'

//    querydsl JPAAnnotationProcessor
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jpa'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api:2.2.3'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api:1.3.5'
}

test {
    useJUnitPlatform()
}

def querydslSrcDir = 'src/main/generated'
sourceSets {
    main.java.srcDirs = ['src/main/java', querydslSrcDir]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory(file(querydslSrcDir))
}

clean.doLast {
    file(querydslSrcDir).deleteDir()
}
